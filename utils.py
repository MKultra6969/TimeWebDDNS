import json
import sys
import requests
import os
from getpass import getpass

DATA_DIR = os.getenv('DATA_DIR', 'data')
CONFIG_FILE = os.path.join(DATA_DIR, 'config.json')
IP_FILE = os.path.join(DATA_DIR, 'ip.txt')
COOKIES_FILE = os.path.join(DATA_DIR, 'cookies.json')

IP_SERVICES = [
    'https://api.ipify.org?format=json',
    'https://wtfismyip.com/text',
    'https://api.myip.com/'
]

def save_config(config):
    os.makedirs(os.path.dirname(CONFIG_FILE), exist_ok=True)
    with open(CONFIG_FILE, 'w', encoding='utf-8') as f:
        json.dump(config, f, indent=2, ensure_ascii=False)
    print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")


def initial_setup():
    print("--- –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Timeweb DDNS ---")
    config = {}
    config["timeweb_login"] = input("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –æ—Ç Timeweb: ")
    config["timeweb_password"] = getpass("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –æ—Ç Timeweb: ")
    domains_raw = input("–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω—ã –∏ –ø–æ–¥–¥–æ–º–µ–Ω—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, domain.ru,sub.domain.ru): ")
    config["domains"] = [d.strip() for d in domains_raw.split(',') if d.strip()]
    browser_choice = input("–ö–∞–∫–æ–π –±—Ä–∞—É–∑–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å? (chrome/firefox) [chrome]: ").lower() or "chrome"
    if browser_choice not in ["chrome", "firefox"]:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–µ–º 'chrome' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
        browser_choice = "chrome"
    config["browser"] = browser_choice
    save_config(config)
    print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ {CONFIG_FILE}\n")
    return config

def clear_session():
    if os.path.exists(IP_FILE):
        os.remove(IP_FILE)
        print(f"‚ÑπÔ∏è  –§–∞–π–ª {IP_FILE} —É–¥–∞–ª–µ–Ω.")
    if os.path.exists(COOKIES_FILE):
        os.remove(COOKIES_FILE)
        print(f"‚ÑπÔ∏è  –§–∞–π–ª {COOKIES_FILE} —É–¥–∞–ª–µ–Ω.")
    print("‚úÖ –°–µ—Å—Å–∏—è —Å–±—Ä–æ—à–µ–Ω–∞.")

def manage_settings():
    try:
        config = load_config(setup_if_missing=False)
    except FileNotFoundError:
        print("–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É.")
        initial_setup()
        return

    while True:
        print("\n--- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ ---")
        print(f"1. –ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω (—Ç–µ–∫—É—â–∏–π: {config['timeweb_login']})")
        print(f"2. –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å (—Ç–µ–∫—É—â–∏–π: ******)")
        print(f"3. –ò–∑–º–µ–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ (—Ç–µ–∫—É—â–∏–π: {', '.join(config['domains'])})")
        print(f"4. –ò–∑–º–µ–Ω–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä (—Ç–µ–∫—É—â–∏–π: {config.get('browser', 'chrome')})")
        print(f"5. –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ (—Ç–µ–∫—É—â–∏–π: {config.get('check_interval_minutes', 30)} –º–∏–Ω.)")
        print("6. –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å: ")

        if choice == '1':
            config['timeweb_login'] = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω: ")
            save_config(config)
        elif choice == '2':
            config['timeweb_password'] = getpass("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: ")
            save_config(config)
        elif choice == '3':
            domains_raw = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ")
            config['domains'] = [d.strip() for d in domains_raw.split(',') if d.strip()]
            save_config(config)
        elif choice == '4':
            browser_choice = input(
                f"–ö–∞–∫–æ–π –±—Ä–∞—É–∑–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å? (chrome/firefox) [{config.get('browser', 'chrome')}]: ").lower() or config.get(
                'browser', 'chrome')
            config['browser'] = "firefox" if browser_choice == "firefox" else "chrome"
            save_config(config)
        elif choice == '5':
            try:
                new_interval = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö: "))
                if new_interval > 0:
                    config['check_interval_minutes'] = new_interval
                    save_config(config)
                else:
                    print("‚ùå –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.")
            except ValueError:
                print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
        elif choice == '6':
            break
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥.")


def load_config(setup_if_missing=True):
    config = {}
    if os.path.exists(CONFIG_FILE):
        with open(CONFIG_FILE, 'r', encoding='utf-8') as f:
            try:
                config = json.load(f)
            except json.JSONDecodeError:
                print(f"üü° –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –§–∞–π–ª {CONFIG_FILE} –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç.")
                pass

    config['timeweb_login'] = os.getenv('TIMEWEB_LOGIN', config.get('timeweb_login'))
    config['timeweb_password'] = os.getenv('TIMEWEB_PASSWORD', config.get('timeweb_password'))

    domains_env = os.getenv('TIMEWEB_DOMAINS')
    if domains_env:
        config['domains'] = [d.strip() for d in domains_env.split(',')]

    if not config.get('timeweb_login') or not config.get('timeweb_password'):
        if setup_if_missing and sys.stdout.isatty():
            print("–õ–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ config.json –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
            return initial_setup()
        else:
            print("‚ùå –û—à–∏–±–∫–∞: TIMEWEB_LOGIN –∏ TIMEWEB_PASSWORD –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ –¥–ª—è Docker.")
            return None

    if 'domains' not in config: config['domains'] = []
    if 'browser' not in config: config['browser'] = 'chrome'
    if 'check_interval_minutes' not in config: config['check_interval_minutes'] = 30

    return config


def get_current_ip():
    for service_url in IP_SERVICES:
        try:
            response = requests.get(service_url, timeout=5)
            response.raise_for_status()

            if 'ipify' in service_url:
                return response.json()['ip']
            else:
                return response.text.strip()

        except requests.RequestException as e:
            print(f"üü°  –°–µ—Ä–≤–∏—Å {service_url} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±—É—é —Å–ª–µ–¥—É—é—â–∏–π...")
            continue

    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π IP –Ω–∏ –æ—Ç –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–µ—Ä–≤–∏—Å–æ–≤.")
    return None


def get_saved_ip():
    if os.path.exists(IP_FILE):
        with open(IP_FILE, 'r') as f:
            return f.read().strip()
    return None


def save_new_ip(ip):
    with open(IP_FILE, 'w') as f:
        f.write(ip)